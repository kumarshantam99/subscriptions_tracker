{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { table, minifyRecord } from './utils/Airtable.js';\nimport auth0 from './utils/auth0';\nimport OwnsRecord from '../middleware/OwnsRecord';\n\nconst handler = async (req, res) => {\n  const {\n    user\n  } = await auth0.getSession(req);\n  const {\n    id,\n    fields\n  } = req.body;\n  console.log(req.body.fields);\n\n  try {\n    const newFields = _objectSpread(_objectSpread({}, fields), {}, {\n      userId: user.sub\n    });\n\n    const updatedRecord = await table.update([{\n      id,\n      fields: newFields\n    }]);\n    res.statusCode = 200;\n    res.json(minifyRecord(updatedRecord));\n  } catch (error) {\n    console.error(error);\n    res.statusCode = 500;\n    res.json({\n      msg: 'Something went wrong'\n    });\n  }\n};\n\nexport default auth0.requireAuthentication(OwnsRecord(handler));","map":{"version":3,"sources":["C:/Users/kshan/Desktop/Web dev projects/subscriptions_tracker/pages/api/updateSubs.js"],"names":["table","minifyRecord","auth0","OwnsRecord","handler","req","res","user","getSession","id","fields","body","console","log","newFields","userId","sub","updatedRecord","update","statusCode","json","error","msg","requireAuthentication"],"mappings":";;;;;;AAAA,SAASA,KAAT,EAAeC,YAAf,QAAmC,qBAAnC;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEI,MAAMC,OAAO,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAML,KAAK,CAACM,UAAN,CAAiBH,GAAjB,CAAvB;AACJ,QAAM;AAAEI,IAAAA,EAAF;AAAKC,IAAAA;AAAL,MAAgBL,GAAG,CAACM,IAA1B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACM,IAAJ,CAASD,MAArB;;AACA,MAAI;AACA,UAAMI,SAAS,mCAAQJ,MAAR;AAAgBK,MAAAA,MAAM,EAAER,IAAI,CAACS;AAA7B,MAAf;;AACA,UAAMC,aAAa,GAAG,MAAMjB,KAAK,CAACkB,MAAN,CAAa,CACrC;AAAET,MAAAA,EAAF;AAAKC,MAAAA,MAAM,EAACI;AAAZ,KADqC,CAAb,CAA5B;AAIAR,IAAAA,GAAG,CAACa,UAAJ,GAAiB,GAAjB;AACAb,IAAAA,GAAG,CAACc,IAAJ,CAASnB,YAAY,CAACgB,aAAD,CAArB;AACH,GARD,CAQE,OAAOI,KAAP,EAAc;AACZT,IAAAA,OAAO,CAACS,KAAR,CAAcA,KAAd;AACAf,IAAAA,GAAG,CAACa,UAAJ,GAAiB,GAAjB;AACAb,IAAAA,GAAG,CAACc,IAAJ,CAAS;AAAEE,MAAAA,GAAG,EAAE;AAAP,KAAT;AACH;AACJ,CAjBG;;AAoBJ,eAAepB,KAAK,CAACqB,qBAAN,CAA4BpB,UAAU,CAACC,OAAD,CAAtC,CAAf","sourcesContent":["import { table,minifyRecord } from './utils/Airtable.js';\r\nimport auth0 from './utils/auth0';\r\nimport OwnsRecord from '../middleware/OwnsRecord';\r\n\r\n    const handler = async (req, res) => {\r\n        const { user } = await auth0.getSession(req);\r\n    const { id,fields } = req.body;\r\n    console.log(req.body.fields)\r\n    try {\r\n        const newFields = { ...fields, userId: user.sub };\r\n        const updatedRecord = await table.update([\r\n            { id,fields:newFields },\r\n        ]);\r\n       \r\n        res.statusCode = 200;\r\n        res.json(minifyRecord(updatedRecord));\r\n    } catch (error) {\r\n        console.error(error);\r\n        res.statusCode = 500;\r\n        res.json({ msg: 'Something went wrong' });\r\n    }\r\n}\r\n\r\n\r\nexport default auth0.requireAuthentication(OwnsRecord(handler));"]},"metadata":{},"sourceType":"module"}