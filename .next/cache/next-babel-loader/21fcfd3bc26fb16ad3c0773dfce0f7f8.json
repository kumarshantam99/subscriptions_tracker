{"ast":null,"code":"require('dotenv').config();\n\nconst airtable = require('airtable');\n\nconst base = new airtable({\n  apiKey: process.env.AIRTABLE_API_KEY\n}).base(process.env.AIRTABLE_BASE_ID);\nconst table = base(process.env.AIRTABLE_TABLE_NAME);\n\nconst minifyRecord = record => {\n  if (!record.fields.archive) {\n    records.fields.archive = false;\n  }\n\n  return {\n    id: record.id,\n    fields: records.fields\n  };\n};\n\nconst minifyRecords = records => {\n  return records.map(record => minifyRecord(record));\n};\n\nexport default (async (req, res) => {\n  const records = await table.select({}).firstPage();\n  const minifiedRecords = minifyRecords(records);\n  res.statusCode = 200;\n  res.json(minifiedRecords);\n});","map":{"version":3,"sources":["C:/Users/kshan/Desktop/Web dev projects/subscriptions_tracker/pages/api/getSubs.js"],"names":["require","config","airtable","base","apiKey","process","env","AIRTABLE_API_KEY","AIRTABLE_BASE_ID","table","AIRTABLE_TABLE_NAME","minifyRecord","record","fields","archive","records","id","minifyRecords","map","req","res","select","firstPage","minifiedRecords","statusCode","json"],"mappings":"AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,MAAMC,QAAQ,GAACF,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMG,IAAI,GAAC,IAAID,QAAJ,CAAa;AAACE,EAAAA,MAAM,EAACC,OAAO,CAACC,GAAR,CAAYC;AAApB,CAAb,EAAoDJ,IAApD,CAAyDE,OAAO,CAACC,GAAR,CAAYE,gBAArE,CAAX;AACA,MAAMC,KAAK,GAACN,IAAI,CAACE,OAAO,CAACC,GAAR,CAAYI,mBAAb,CAAhB;;AACA,MAAMC,YAAY,GAAEC,MAAD,IAAU;AACzB,MAAG,CAACA,MAAM,CAACC,MAAP,CAAcC,OAAlB,EAA0B;AACtBC,IAAAA,OAAO,CAACF,MAAR,CAAeC,OAAf,GAAuB,KAAvB;AACH;;AACD,SAAM;AACFE,IAAAA,EAAE,EAACJ,MAAM,CAACI,EADR;AAEFH,IAAAA,MAAM,EAACE,OAAO,CAACF;AAFb,GAAN;AAIH,CARD;;AASA,MAAMI,aAAa,GAAEF,OAAD,IAAW;AAC3B,SAAOA,OAAO,CAACG,GAAR,CAAYN,MAAM,IAAED,YAAY,CAACC,MAAD,CAAhC,CAAP;AACH,CAFD;;AAGA,gBAAe,OAAOO,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,QAAML,OAAO,GAAC,MAAMN,KAAK,CAACY,MAAN,CAAa,EAAb,EAEjBC,SAFiB,EAApB;AAGA,QAAMC,eAAe,GAACN,aAAa,CAACF,OAAD,CAAnC;AACAK,EAAAA,GAAG,CAACI,UAAJ,GAAiB,GAAjB;AACAJ,EAAAA,GAAG,CAACK,IAAJ,CAASF,eAAT;AAED,CARH","sourcesContent":["require('dotenv').config()\r\nconst airtable=require('airtable')\r\nconst base=new airtable({apiKey:process.env.AIRTABLE_API_KEY}).base(process.env.AIRTABLE_BASE_ID)\r\nconst table=base(process.env.AIRTABLE_TABLE_NAME)\r\nconst minifyRecord=(record)=>{\r\n    if(!record.fields.archive){\r\n        records.fields.archive=false\r\n    }\r\n    return{\r\n        id:record.id,\r\n        fields:records.fields\r\n    }\r\n}\r\nconst minifyRecords=(records)=>{\r\n    return records.map(record=>minifyRecord(record))\r\n}\r\nexport default async (req, res) => {\r\n    const records=await table.select({\r\n\r\n    }).firstPage()\r\n    const minifiedRecords=minifyRecords(records)\r\n    res.statusCode = 200\r\n    res.json(minifiedRecords)\r\n    \r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}