{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { table } from './utils/Airtable.js';\nexport default (async (req, res) => {\n  const subs = req.body;\n  console.log(req.body);\n\n  try {\n    const createdRecords = await table.create([{\n      fields: _objectSpread({}, subs)\n    }]);\n    const createdRecord = {\n      id: createdRecords[0].id,\n      fields: createdRecords[0].fields\n    };\n    console.log(createdRecord);\n    res.statusCode = 200;\n    res.json(createdRecord);\n  } catch (error) {\n    console.error(error);\n    res.statusCode = 500;\n    res.json({\n      msg: 'Something went wrong'\n    });\n  }\n});","map":{"version":3,"sources":["C:/Users/kshan/Desktop/Web dev projects/subscriptions_tracker/pages/api/createSubs.js"],"names":["table","req","res","subs","body","console","log","createdRecords","create","fields","createdRecord","id","statusCode","json","error","msg"],"mappings":";;;;;;AAAA,SAASA,KAAT,QAAsB,qBAAtB;AAEA,gBAAgB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAIhC,QAAMC,IAAI,GAAEF,GAAG,CAACG,IAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACG,IAAhB;;AACA,MAAI;AACA,UAAMG,cAAc,GAAG,MAAMP,KAAK,CAACQ,MAAN,CAAa,CACtC;AAAEC,MAAAA,MAAM,oBAAKN,IAAL;AAAR,KADsC,CAAb,CAA7B;AAGA,UAAMO,aAAa,GAAG;AAClBC,MAAAA,EAAE,EAAEJ,cAAc,CAAC,CAAD,CAAd,CAAkBI,EADJ;AAElBF,MAAAA,MAAM,EAAEF,cAAc,CAAC,CAAD,CAAd,CAAkBE;AAFR,KAAtB;AAIAJ,IAAAA,OAAO,CAACC,GAAR,CAAYI,aAAZ;AACAR,IAAAA,GAAG,CAACU,UAAJ,GAAiB,GAAjB;AACAV,IAAAA,GAAG,CAACW,IAAJ,CAASH,aAAT;AACH,GAXD,CAWE,OAAOI,KAAP,EAAc;AACZT,IAAAA,OAAO,CAACS,KAAR,CAAcA,KAAd;AACAZ,IAAAA,GAAG,CAACU,UAAJ,GAAiB,GAAjB;AACAV,IAAAA,GAAG,CAACW,IAAJ,CAAS;AAAEE,MAAAA,GAAG,EAAE;AAAP,KAAT;AACH;AACJ,CAtBD","sourcesContent":["import { table } from './utils/Airtable.js';\r\n\r\nexport default (async (req, res) => {\r\n    \r\n    \r\n            \r\n    const subs= req.body;\r\n    console.log(req.body)\r\n    try {\r\n        const createdRecords = await table.create([\r\n            { fields:{...subs}},\r\n        ]);\r\n        const createdRecord = {\r\n            id: createdRecords[0].id,\r\n            fields: createdRecords[0].fields,\r\n        };\r\n        console.log(createdRecord)\r\n        res.statusCode = 200;\r\n        res.json(createdRecord);\r\n    } catch (error) {\r\n        console.error(error);\r\n        res.statusCode = 500;\r\n        res.json({ msg: 'Something went wrong' });\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}