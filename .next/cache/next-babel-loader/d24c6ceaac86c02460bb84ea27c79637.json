{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\kshan\\\\Desktop\\\\Web dev projects\\\\subscriptions_tracker\\\\components\\\\Tags.js\";\nimport React, { useState, useEffect } from 'react';\nexport default function Tags({\n  tagsUpdated,\n  key\n}) {\n  const tagChoices = ['7 days', '15 days', '30 days', '30+ days'];\n  const {\n    0: selectedTags,\n    1: setSelectedTags\n  } = useState([]);\n  useEffect(() => {\n    setSelectedTags([]);\n  }, [key]);\n\n  const tagChange = e => {\n    const value = e.target.value;\n    const alreadySelected = selectedTags.includes(value);\n\n    if (e.target.checked && !alreadySelected) {\n      setSelectedTags([...selectedTags, value]);\n    } else if (!e.target.checked && alreadySelected) {\n      setSelectedTags(selectedTags.filter(prevTag => prevTag !== value));\n    }\n  };\n\n  useEffect(() => {\n    tagsUpdated(selectedTags);\n  }, [selectedTags, tagsUpdated]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tagChoices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"checkbox-inline mr-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"marked\",\n        id: \"marked\",\n        className: \"mr-2 form-checkbox h-5 w-5\",\n        onChange: tagChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 22\n      }, this), ' ' + choice]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n}","map":{"version":3,"sources":["C:/Users/kshan/Desktop/Web dev projects/subscriptions_tracker/components/Tags.js"],"names":["React","useState","useEffect","Tags","tagsUpdated","key","tagChoices","selectedTags","setSelectedTags","tagChange","e","value","target","alreadySelected","includes","checked","filter","prevTag","map","choice","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAd,EAAoC;AAC/C,QAAMC,UAAU,GAAG,CAAC,QAAD,EAAW,SAAX,EAAsB,SAAtB,EAAiC,UAAjC,CAAnB;AACA,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCP,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,eAAe,CAAC,EAAD,CAAf;AACH,GAFQ,EAEN,CAACH,GAAD,CAFM,CAAT;;AAIA,QAAMI,SAAS,GAAIC,CAAD,IAAO;AACrB,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAME,eAAe,GAAGN,YAAY,CAACO,QAAb,CAAsBH,KAAtB,CAAxB;;AACA,QAAID,CAAC,CAACE,MAAF,CAASG,OAAT,IAAoB,CAACF,eAAzB,EAA0C;AACtCL,MAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBI,KAAlB,CAAD,CAAf;AACH,KAFD,MAEO,IAAI,CAACD,CAAC,CAACE,MAAF,CAASG,OAAV,IAAqBF,eAAzB,EAA0C;AAC7CL,MAAAA,eAAe,CACXD,YAAY,CAACS,MAAb,CAAqBC,OAAD,IAAaA,OAAO,KAAKN,KAA7C,CADW,CAAf;AAGH;AACJ,GAVD;;AAYAT,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,WAAW,CAACG,YAAD,CAAX;AACH,GAFQ,EAEN,CAACA,YAAD,EAAeH,WAAf,CAFM,CAAT;AAIA,sBACI;AAAA,cACKE,UAAU,CAACY,GAAX,CAAe,CAACC,MAAD,EAASC,KAAT,kBACZ;AAAO,MAAA,SAAS,EAAC,sBAAjB;AAAA,8BAEK;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,QAA5B;AAAqC,QAAA,EAAE,EAAC,QAAxC;AAAkD,QAAA,SAAS,EAAC,4BAA5D;AAAyF,QAAA,QAAQ,EAAEX;AAAnG;AAAA;AAAA;AAAA;AAAA,cAFL,EAGK,MAAMU,MAHX;AAAA,OAA6CC,KAA7C;AAAA;AAAA;AAAA;AAAA,YADH;AADL,mBADJ;AAWH","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport default function Tags({ tagsUpdated, key }) {\r\n    const tagChoices = ['7 days', '15 days', '30 days', '30+ days'];\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setSelectedTags([]);\r\n    }, [key]);\r\n\r\n    const tagChange = (e) => {\r\n        const value = e.target.value;\r\n        const alreadySelected = selectedTags.includes(value);\r\n        if (e.target.checked && !alreadySelected) {\r\n            setSelectedTags([...selectedTags, value]);\r\n        } else if (!e.target.checked && alreadySelected) {\r\n            setSelectedTags(\r\n                selectedTags.filter((prevTag) => prevTag !== value)\r\n            );\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        tagsUpdated(selectedTags);\r\n    }, [selectedTags, tagsUpdated]);\r\n\r\n    return (\r\n        <>\r\n            {tagChoices.map((choice, index) => (\r\n                <label className=\"checkbox-inline mr-3\" key={index}>\r\n                    \r\n                     <input type=\"checkbox\" name=\"marked\" id=\"marked\"  className=\"mr-2 form-checkbox h-5 w-5\" onChange={tagChange}/>\r\n                    {' ' + choice}\r\n                </label>\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}